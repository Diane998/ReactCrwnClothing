{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ad_gutierrez/Desktop/react/complete-react-developer/4-e-commerce/crwn-clothing/client/src/components/pages/CheckoutFormPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport './CheckoutFormPage.css';\nconst CARD_OPTIONS = {\n  iconStyle: 'solid',\n  style: {\n    base: {\n      iconColor: '#c4f0ff',\n      color: '#fff',\n      fontWeight: 500,\n      fontFamily: 'Roboto, Open Sans, Segoe UI, sans-serif',\n      fontSize: '16px',\n      fontSmoothing: 'antialiased',\n      ':-webkit-autofill': {\n        color: '#fce883'\n      },\n      '::placeholder': {\n        color: '#87bbfd'\n      }\n    },\n    invalid: {\n      iconColor: '#ffc7ee',\n      color: '#ffc7ee'\n    }\n  }\n};\n\nconst CheckoutFormPage = () => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    // Block native form submission.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    } // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n\n\n    const cardElement = elements.getElement(CardElement); // Use your card Element with other Stripe.js APIs\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement\n    });\n\n    if (error) {\n      console.log('[error]', error);\n    } else {\n      console.log('[PaymentMethod]', paymentMethod);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"FormGroup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"FormRow\",\n        children: /*#__PURE__*/_jsxDEV(CardElement, {\n          options: CARD_OPTIONS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe,\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutFormPage, \"EKvoGMX7lxsZ5SGPpYu2aKFzClQ=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutFormPage;\nexport default CheckoutFormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutFormPage\");","map":{"version":3,"sources":["/home/ad_gutierrez/Desktop/react/complete-react-developer/4-e-commerce/crwn-clothing/client/src/components/pages/CheckoutFormPage.js"],"names":["React","CardElement","useStripe","useElements","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","CheckoutFormPage","stripe","elements","handleSubmit","event","preventDefault","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,yBAApD;AACA,OAAO,wBAAP;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,OADQ;AAEnBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,SAAS,EAAE,SADP;AAEJC,MAAAA,KAAK,EAAE,MAFH;AAGJC,MAAAA,UAAU,EAAE,GAHR;AAIJC,MAAAA,UAAU,EAAE,yCAJR;AAKJC,MAAAA,QAAQ,EAAE,MALN;AAMJC,MAAAA,aAAa,EAAE,aANX;AAOJ,2BAAqB;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAPjB;AAQJ,uBAAiB;AAAEA,QAAAA,KAAK,EAAE;AAAT;AARb,KADD;AAWLK,IAAAA,OAAO,EAAE;AACPN,MAAAA,SAAS,EAAE,SADJ;AAEPC,MAAAA,KAAK,EAAE;AAFA;AAXJ;AAFY,CAArB;;AAoBA,MAAMM,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAMC,MAAM,GAAGd,SAAS,EAAxB;AACA,QAAMe,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,YAAY,GAAG,MAAMC,KAAN,IAAe;AAClC;AACAA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI,CAACJ,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB;AACA;AACA;AACD,KARiC,CAUlC;AACA;AACA;;;AACA,UAAMI,WAAW,GAAGJ,QAAQ,CAACK,UAAT,CAAoBrB,WAApB,CAApB,CAbkC,CAelC;;AACA,UAAM;AAAEsB,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAA2B,MAAMR,MAAM,CAACS,mBAAP,CAA2B;AAChEC,MAAAA,IAAI,EAAE,MAD0D;AAEhEC,MAAAA,IAAI,EAAEN;AAF0D,KAA3B,CAAvC;;AAKA,QAAIE,KAAJ,EAAW;AACTK,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,KAAvB;AACD,KAFD,MAEO;AACLK,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,aAA/B;AACD;AACF,GA1BD;;AA4BA,sBACE;AAAM,IAAA,QAAQ,EAAEN,YAAhB;AAAA,4BACE;AAAU,MAAA,SAAS,EAAC,WAApB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,OAAO,EAAEd;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAE,CAACY,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA5CD;;GAAMD,gB;UACWb,S,EACEC,W;;;KAFbY,gB;AA8CN,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport './CheckoutFormPage.css';\n\nconst CARD_OPTIONS = {\n  iconStyle: 'solid',\n  style: {\n    base: {\n      iconColor: '#c4f0ff',\n      color: '#fff',\n      fontWeight: 500,\n      fontFamily: 'Roboto, Open Sans, Segoe UI, sans-serif',\n      fontSize: '16px',\n      fontSmoothing: 'antialiased',\n      ':-webkit-autofill': { color: '#fce883' },\n      '::placeholder': { color: '#87bbfd' }\n    },\n    invalid: {\n      iconColor: '#ffc7ee',\n      color: '#ffc7ee'\n    }\n  }\n};\n\nconst CheckoutFormPage = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    // Block native form submission.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    }\n\n    // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n    const cardElement = elements.getElement(CardElement);\n\n    // Use your card Element with other Stripe.js APIs\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement\n    });\n\n    if (error) {\n      console.log('[error]', error);\n    } else {\n      console.log('[PaymentMethod]', paymentMethod);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <fieldset className=\"FormGroup\">\n        <div className=\"FormRow\">\n          <CardElement options={CARD_OPTIONS} />\n        </div>\n      </fieldset>\n      <button type=\"submit\" disabled={!stripe}>\n        Pay\n      </button>\n    </form>\n  );\n};\n\nexport default CheckoutFormPage;\n"]},"metadata":{},"sourceType":"module"}