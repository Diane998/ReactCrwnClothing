{"ast":null,"code":"import { SET_CURRENT_USER, TOGGLE_CART_VISIBILITY, ADD_ITEM, CLEAR_ITEM_FROM_CART, REMOVE_ITEM, FETCH_COLLECTIONS_START, FETCH_COLLECTIONS_SUCCESS, FETCH_COLLECTIONS_FAILURE } from './types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../config/firebase';\nexport const setCurrentUser = user => ({\n  type: SET_CURRENT_USER,\n  payload: user\n});\nexport const toggleCartVisibility = () => ({\n  type: TOGGLE_CART_VISIBILITY\n});\nexport const addItem = item => ({\n  type: ADD_ITEM,\n  payload: item\n});\nexport const clearItemFromCart = item => ({\n  type: CLEAR_ITEM_FROM_CART,\n  payload: item\n});\nexport const removeItem = item => ({\n  type: REMOVE_ITEM,\n  payload: item\n});\nexport const fetchCollections = () => async dispatch => {\n  const collectionRef = firestore.collection('collections');\n  dispatch({\n    type: FETCH_COLLECTIONS_START\n  });\n\n  try {\n    const res = await collectionRef.get();\n    const collectionsMap = convertCollectionsSnapshotToMap(res);\n    dispatch({\n      type: FETCH_COLLECTIONS_SUCCESS,\n      payload: collectionsMap\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_COLLECTIONS_FAILURE,\n      payload: err\n    });\n  } // collectionRef\n  //   .get()\n  //   .then(snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch({ type: FETCH_COLLECTIONS_SUCCESS, payload: collectionsMap });\n  //   })\n  //   .catch(err => {\n  //     dispatch({ type: FETCH_COLLECTIONS_FAILURE, payload: err });\n  //   });\n\n};","map":{"version":3,"sources":["/home/ad_gutierrez/Desktop/react/complete-react-developer/4-e-commerce/crwn-clothing/src/redux/actions/index.js"],"names":["SET_CURRENT_USER","TOGGLE_CART_VISIBILITY","ADD_ITEM","CLEAR_ITEM_FROM_CART","REMOVE_ITEM","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAILURE","firestore","convertCollectionsSnapshotToMap","setCurrentUser","user","type","payload","toggleCartVisibility","addItem","item","clearItemFromCart","removeItem","fetchCollections","dispatch","collectionRef","collection","res","get","collectionsMap","err"],"mappings":"AAAA,SACEA,gBADF,EAEEC,sBAFF,EAGEC,QAHF,EAIEC,oBAJF,EAKEC,WALF,EAMEC,uBANF,EAOEC,yBAPF,EAQEC,yBARF,QASO,SATP;AAWA,SACEC,SADF,EAEEC,+BAFF,QAGO,uBAHP;AAKA,OAAO,MAAMC,cAAc,GAAGC,IAAI,KAAK;AACrCC,EAAAA,IAAI,EAAEZ,gBAD+B;AAErCa,EAAAA,OAAO,EAAEF;AAF4B,CAAL,CAA3B;AAKP,OAAO,MAAMG,oBAAoB,GAAG,OAAO;AACzCF,EAAAA,IAAI,EAAEX;AADmC,CAAP,CAA7B;AAIP,OAAO,MAAMc,OAAO,GAAGC,IAAI,KAAK;AAC9BJ,EAAAA,IAAI,EAAEV,QADwB;AAE9BW,EAAAA,OAAO,EAAEG;AAFqB,CAAL,CAApB;AAKP,OAAO,MAAMC,iBAAiB,GAAGD,IAAI,KAAK;AACxCJ,EAAAA,IAAI,EAAET,oBADkC;AAExCU,EAAAA,OAAO,EAAEG;AAF+B,CAAL,CAA9B;AAKP,OAAO,MAAME,UAAU,GAAGF,IAAI,KAAK;AACjCJ,EAAAA,IAAI,EAAER,WAD2B;AAEjCS,EAAAA,OAAO,EAAEG;AAFwB,CAAL,CAAvB;AAKP,OAAO,MAAMG,gBAAgB,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACtD,QAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAF,EAAAA,QAAQ,CAAC;AAAER,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;;AAEA,MAAI;AACF,UAAMkB,GAAG,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAlB;AACA,UAAMC,cAAc,GAAGhB,+BAA+B,CAACc,GAAD,CAAtD;AACAH,IAAAA,QAAQ,CAAC;AAAER,MAAAA,IAAI,EAAEN,yBAAR;AAAmCO,MAAAA,OAAO,EAAEY;AAA5C,KAAD,CAAR;AACD,GAJD,CAIE,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AAAER,MAAAA,IAAI,EAAEL,yBAAR;AAAmCM,MAAAA,OAAO,EAAEa;AAA5C,KAAD,CAAR;AACD,GAVqD,CAYtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,CArBM","sourcesContent":["import {\n  SET_CURRENT_USER,\n  TOGGLE_CART_VISIBILITY,\n  ADD_ITEM,\n  CLEAR_ITEM_FROM_CART,\n  REMOVE_ITEM,\n  FETCH_COLLECTIONS_START,\n  FETCH_COLLECTIONS_SUCCESS,\n  FETCH_COLLECTIONS_FAILURE\n} from './types';\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from '../../config/firebase';\n\nexport const setCurrentUser = user => ({\n  type: SET_CURRENT_USER,\n  payload: user\n});\n\nexport const toggleCartVisibility = () => ({\n  type: TOGGLE_CART_VISIBILITY\n});\n\nexport const addItem = item => ({\n  type: ADD_ITEM,\n  payload: item\n});\n\nexport const clearItemFromCart = item => ({\n  type: CLEAR_ITEM_FROM_CART,\n  payload: item\n});\n\nexport const removeItem = item => ({\n  type: REMOVE_ITEM,\n  payload: item\n});\n\nexport const fetchCollections = () => async dispatch => {\n  const collectionRef = firestore.collection('collections');\n  dispatch({ type: FETCH_COLLECTIONS_START });\n\n  try {\n    const res = await collectionRef.get();\n    const collectionsMap = convertCollectionsSnapshotToMap(res);\n    dispatch({ type: FETCH_COLLECTIONS_SUCCESS, payload: collectionsMap });\n  } catch (err) {\n    dispatch({ type: FETCH_COLLECTIONS_FAILURE, payload: err });\n  }\n\n  // collectionRef\n  //   .get()\n  //   .then(snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch({ type: FETCH_COLLECTIONS_SUCCESS, payload: collectionsMap });\n  //   })\n  //   .catch(err => {\n  //     dispatch({ type: FETCH_COLLECTIONS_FAILURE, payload: err });\n  //   });\n};\n"]},"metadata":{},"sourceType":"module"}