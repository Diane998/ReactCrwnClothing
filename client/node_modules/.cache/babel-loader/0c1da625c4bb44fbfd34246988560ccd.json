{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { GOOGLE_SIGN_IN_START, EMAIL_SIGN_IN_START, CHECK_USER_SESSION, SIGN_OUT_START, SIGN_UP_START, SIGN_UP_SUCCESS } from '../actions/userActionTypes';\nimport { auth, googleProvider, createUserProfile, getCurrentUser } from '../../config/firebase';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess } from '../actions/usersActions';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfile, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfile, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfile, user);\n    const userSnapshot = yield userRef.get();\n    console.log('signin', userSnapshot);\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* onSignUpStart() {\n  yield takeLatest(SIGN_UP_START, signUp);\n}\nexport function* signInAfterSignUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfile, user);\n    const userSnapshot = yield userRef.get();\n    console.log('signin', userSnapshot);\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n\n    try {\n      const userRef = yield call(createUserProfile, userAuth);\n      const userSnapshot = yield userRef.get();\n      yield put(signInSuccess({\n        id: userSnapshot.id,\n        ...userSnapshot.data()\n      }));\n    } catch (err) {\n      yield put(signInFailure(err));\n    }\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (err) {\n    yield put(signOutFailure(err));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/home/ad_gutierrez/Desktop/react/complete-react-developer/4-e-commerce/crwn-clothing/src/redux/sagas/userSagas.js"],"names":["takeLatest","put","all","call","GOOGLE_SIGN_IN_START","EMAIL_SIGN_IN_START","CHECK_USER_SESSION","SIGN_OUT_START","SIGN_UP_START","SIGN_UP_SUCCESS","auth","googleProvider","createUserProfile","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","err","onGoogleSignInStart","signInWithEmail","payload","email","password","signInWithEmailAndPassword","console","log","onEmailSignInStart","signUp","displayName","createUserWithEmailAndPassword","onSignUpStart","signInAfterSignUp","onSignUpSuccess","isUserAuthenticated","onCheckUserSession","signOut","onSignOutStart","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport {\n  GOOGLE_SIGN_IN_START,\n  EMAIL_SIGN_IN_START,\n  CHECK_USER_SESSION,\n  SIGN_OUT_START,\n  SIGN_UP_START,\n  SIGN_UP_SUCCESS\n} from '../actions/userActionTypes';\nimport {\n  auth,\n  googleProvider,\n  createUserProfile,\n  getCurrentUser\n} from '../../config/firebase';\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutSuccess,\n  signOutFailure,\n  signUpSuccess\n} from '../actions/usersActions';\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfile, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfile, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfile, user);\n    const userSnapshot = yield userRef.get();\n    console.log('signin', userSnapshot);\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(SIGN_UP_START, signUp);\n}\n\nexport function* signInAfterSignUp({\n  payload: { email, password, displayName }\n}) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfile, user);\n    const userSnapshot = yield userRef.get();\n    console.log('signin', userSnapshot);\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n\nexport function* onSignUpSuccess() {\n  yield takeLatest(SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n\n    try {\n      const userRef = yield call(createUserProfile, userAuth);\n      const userSnapshot = yield userRef.get();\n      yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n    } catch (err) {\n      yield put(signInFailure(err));\n    }\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (err) {\n    yield put(signOutFailure(err));\n  }\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(SIGN_OUT_START, signOut);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}