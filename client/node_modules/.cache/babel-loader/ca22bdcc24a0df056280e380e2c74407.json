{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { GOOGLE_SIGN_IN_START, EMAIL_SIGN_IN_START, CHECK_USER_SESSION, SIGN_OUT_START, EMAIL_SIGN_UP_START } from '../actions/userActionTypes';\nimport { auth, googleProvider, createUserProfile, getCurrentUser } from '../../config/firebase';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from '../actions/usersActions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfile, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfile, user);\n    const userSnapshot = yield userRef.get();\n    console.log('signin', userSnapshot);\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* signUpWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfile, user);\n    const userSnapshot = yield userRef.get();\n    console.log(userSnapshot); // yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* onEmailSignUpStart() {\n  yield takeLatest(EMAIL_SIGN_UP_START, signUpWithEmail);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n\n    try {\n      const userRef = yield call(createUserProfile, userAuth);\n      const userSnapshot = yield userRef.get();\n      yield put(signInSuccess({\n        id: userSnapshot.id,\n        ...userSnapshot.data()\n      }));\n    } catch (err) {\n      yield put(signInFailure(err));\n    }\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (err) {\n    yield put(signOutFailure(err));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/home/ad_gutierrez/Desktop/react/complete-react-developer/4-e-commerce/crwn-clothing/src/redux/sagas/userSagas.js"],"names":["takeLatest","put","all","call","GOOGLE_SIGN_IN_START","EMAIL_SIGN_IN_START","CHECK_USER_SESSION","SIGN_OUT_START","EMAIL_SIGN_UP_START","auth","googleProvider","createUserProfile","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","err","onGoogleSignInStart","signInWithEmail","payload","email","password","signInWithEmailAndPassword","console","log","onEmailSignInStart","signUpWithEmail","createUserWithEmailAndPassword","onEmailSignUpStart","isUserAuthenticated","userAuth","onCheckUserSession","signOut","onSignOutStart","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport {\n  GOOGLE_SIGN_IN_START,\n  EMAIL_SIGN_IN_START,\n  CHECK_USER_SESSION,\n  SIGN_OUT_START,\n  EMAIL_SIGN_UP_START\n} from '../actions/userActionTypes';\nimport {\n  auth,\n  googleProvider,\n  createUserProfile,\n  getCurrentUser\n} from '../../config/firebase';\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutSuccess,\n  signOutFailure\n} from '../actions/usersActions';\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfile, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfile, user);\n    const userSnapshot = yield userRef.get();\n    console.log('signin', userSnapshot);\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* signUpWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfile, user);\n    const userSnapshot = yield userRef.get();\n    console.log(userSnapshot);\n    // yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n\nexport function* onEmailSignUpStart() {\n  yield takeLatest(EMAIL_SIGN_UP_START, signUpWithEmail);\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n\n    try {\n      const userRef = yield call(createUserProfile, userAuth);\n      const userSnapshot = yield userRef.get();\n      yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n    } catch (err) {\n      yield put(signInFailure(err));\n    }\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (err) {\n    yield put(signOutFailure(err));\n  }\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(SIGN_OUT_START, signOut);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}