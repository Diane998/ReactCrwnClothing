{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDq_T8tOtvgm7rjPRGK1_QZ2Obz6mmHk1M',\n  authDomain: 'crwn-clothing-3dc3f.firebaseapp.com',\n  projectId: 'crwn-clothing-3dc3f',\n  storageBucket: 'crwn-clothing-3dc3f.appspot.com',\n  messagingSenderId: '401091160751',\n  appId: '1:401091160751:web:e7ed118d09cd355dd1c25a',\n  measurementId: 'G-TLVL3VTMEW'\n};\nexport const createUserProfile = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionRef = firestore.collection('users');\n  const snapshot = await userRef.get();\n  const collectionSnapshot = await collectionRef.get();\n  console.log({\n    collections: collectionSnapshot.docs.map(doc => doc.data())\n  });\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/home/ad_gutierrez/Desktop/react/complete-react-developer/4-e-commerce/crwn-clothing/src/config/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfile","userAuth","additionalData","userRef","firestore","doc","uid","collectionRef","collection","snapshot","get","collectionSnapshot","console","log","collections","docs","map","data","exists","displayName","email","createdAt","Date","set","err","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,qCAFS;AAGrBC,EAAAA,SAAS,EAAE,qBAHU;AAIrBC,EAAAA,aAAa,EAAE,iCAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE,2CANc;AAOrBC,EAAAA,aAAa,EAAE;AAPM,CAAvB;AAUA,OAAO,MAAMC,iBAAiB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACnE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqB,OAArB,CAAtB;AAEA,QAAMC,QAAQ,GAAG,MAAMN,OAAO,CAACO,GAAR,EAAvB;AACA,QAAMC,kBAAkB,GAAG,MAAMJ,aAAa,CAACG,GAAd,EAAjC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,IAAAA,WAAW,EAAEH,kBAAkB,CAACI,IAAnB,CAAwBC,GAAxB,CAA4BX,GAAG,IAAIA,GAAG,CAACY,IAAJ,EAAnC;AAAf,GAAZ;;AAEA,MAAI,CAACR,QAAQ,CAACS,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBnB,QAA/B;AACA,UAAMoB,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMnB,OAAO,CAACoB,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGnB;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOsB,GAAP,EAAY;AACZZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACD;AACF;;AAED,SAAOrB,OAAP;AACD,CA3BM;AA6BPZ,QAAQ,CAACkC,aAAT,CAAuBjC,cAAvB;AAEA,OAAO,MAAMkC,IAAI,GAAGnC,QAAQ,CAACmC,IAAT,EAAb;AACP,OAAO,MAAMtB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMuB,QAAQ,GAAG,IAAIpC,QAAQ,CAACmC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAepC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDq_T8tOtvgm7rjPRGK1_QZ2Obz6mmHk1M',\n  authDomain: 'crwn-clothing-3dc3f.firebaseapp.com',\n  projectId: 'crwn-clothing-3dc3f',\n  storageBucket: 'crwn-clothing-3dc3f.appspot.com',\n  messagingSenderId: '401091160751',\n  appId: '1:401091160751:web:e7ed118d09cd355dd1c25a',\n  measurementId: 'G-TLVL3VTMEW'\n};\n\nexport const createUserProfile = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionRef = firestore.collection('users');\n\n  const snapshot = await userRef.get();\n  const collectionSnapshot = await collectionRef.get();\n  console.log({ collections: collectionSnapshot.docs.map(doc => doc.data()) });\n\n  if (!snapshot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return userRef;\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}